@page "/block"
@using SmartCut.Shared.Models
@using SmartCut.Shared.Models.ViewModels
@using SmartCut.Shared.Resources.Localization
@using SmartCut.Shared.Services
@using SmartCut.Shared.Layout.Components
@inject BreadcrumbService BreadcrumbService
@inject NotificationService NotificationService
@inject NavigationManager NavigationManager
@inject ApiClient BlockService
<div class="card">
    <div class="card-overlay"></div>
        <div class="card-inner">
            <div class="card-header d-flex justify-content-between align-items-center">
                <h3 class="card-title mb-0">@Localizer.Get("Processes")</h3>
             </div>
            <div class="card-body btn-container">

                <ListButton buttonText="@Localizer.Get("Add New")" buttonBackgroundColor="#20c997"
                        svg="@plusSquareSvg"
                        OnClicked="NavigateToCreate"
                        />

            <ListButton buttonText="@Localizer.Get("Add New")" buttonBackgroundColor="#4a90e2"
                        svg="@listSvg"
                        OnClicked="NavigateToList"
                        />
            
            <ListButton buttonText="@Localizer.Get("Import from Excel")" buttonBackgroundColor="#185C37"
                        svg="@importIcon"
                        OnClicked="ImportFromExcelAsync"
                        buttonWidth="200px"
                        transformIcon="150px" 
                        iconHoverWidth="115px" />
                        
                <ListButton buttonText="@Localizer.Get("Export to Excel")" buttonBackgroundColor="#185C37"
                        svg="@exportIcon"
                        OnClicked="ExportToExcelAsync"
                        buttonWidth="200px"
                        transformIcon="150px" 
                        iconHoverWidth="115px" />

          
            </div>
        </div>
</div>
@code {

    private MarkupString plusSquareSvg = new MarkupString(@"
<svg xmlns='http://www.w3.org/2000/svg' width='16' height='16' fill='white' class='bi bi-plus-square-fill' viewBox='0 0 16 16'>
  <path d='M2 0a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V2a2 2 0 0 0-2-2H2zm6.5 4.5v3h3a.5.5 0 0 1 0 1h-3v3a.5.5 0 0 1-1 0v-3h-3a.5.5 0 0 1 0-1h3v-3a.5.5 0 0 1 1 0z'/>
</svg>");
    private MarkupString listSvg = new MarkupString(@"    <svg xmlns='http://www.w3.org/2000/svg' width='16' height='16' fill='white' class='bi bi-list-nested' viewBox='0 0 16 16'>
            <path fill-rule='evenodd' d='M4.5 11.5A.5.5 0 0 1 5 11h10a.5.5 0 0 1 0 1H5a.5.5 0 0 1-.5-.5zm-2-4A.5.5 0 0 1 3 7h10a.5.5 0 0 1 0 1H3a.5.5 0 0 1-.5-.5zm-2-4A.5.5 0 0 1 1 3h10a.5.5 0 0 1 0 1H1a.5.5 0 0 1-.5-.5z'/>
        </svg>");

    private MarkupString importIcon = new MarkupString(@"
        <svg xmlns='http://www.w3.org/2000/svg' width='16' height='16' fill='white' class='bi bi-file-earmark-arrow-down' viewBox='0 0 16 16'>
            <path d='M8.5 6.5a.5.5 0 0 0-1 0v3.793L6.354 9.146a.5.5 0 1 0-.708.708l2 2a.5.5 0 0 0 .708 0l2-2a.5.5 0 0 0-.708-.708L8.5 10.293z'/>
            <path d='M14 14V4.5L9.5 0H4a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h8a2 2 0 0 0 2-2M9.5 3A1.5 1.5 0 0 0 11 4.5h2V14a1 1 0 0 1-1 1H4a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1h5.5z'/>
        </svg>");

    private MarkupString exportIcon = new MarkupString(@"
        <svg xmlns='http://www.w3.org/2000/svg' width='16' height='16' fill='white' class='bi bi-file-earmark-arrow-up-fill' viewBox='0 0 16 16'>
            <path d='M9.293 0H4a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h8a2 2 0 0 0 2-2V4.707A1 1 0 0 0 13.707 4L10 .293A1 1 0 0 0 9.293 0M9.5 3.5v-2l3 3h-2a1 1 0 0 1-1-1M6.354 9.854a.5.5 0 0 1-.708-.708l2-2a.5.5 0 0 1 .708 0l2 2a.5.5 0 0 1-.708.708L8.5 8.707V12.5a.5.5 0 0 1-1 0V8.707z'/>
        </svg>");
    protected override void OnInitialized()
    {
        BreadcrumbService.SetBreadcrumbs(new List<BreadcrumbItem>
        {
            new() { Title = "Ana Sayfa", Url = "/", IsActive = false },
            new() { Title = "Blok", Url = "/block", IsActive = true } 

        });
    }
    private void NavigateToCreate()
    {
        NavigationManager.NavigateTo("block-create");
    }
    private void NavigateToList()
    {
        NavigationManager.NavigateTo("block-list");
    }
    private async Task ImportFromExcelAsync()
    {
        NavigationManager.NavigateTo("block-create");
    }
    private async Task ExportToExcelAsync()
    {
        NavigationManager.NavigateTo("block-create");
    }

}
