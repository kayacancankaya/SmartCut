@using SmartCut.Shared.Services
@inject NotificationService NotificationService

@if (!string.IsNullOrEmpty(NotificationService.SuccessMessage))
{
    <div class="modal notification-modal show d-block" tabindex="-1">
        <div class="modal-dialog">
            <div class="modal-content border-success">
                <div class="modal-header bg-success text-white">
                    <h5 class="modal-title">Başarılı</h5>
                    <button type="button" class="btn-close" @onclick="NotificationService.Clear"></button>
                </div>
                <div class="modal-body">
                    <p>@NotificationService.SuccessMessage</p>
                </div>
            </div>
        </div>
    </div>
}
else if (!string.IsNullOrEmpty(NotificationService.ErrorMessage))
{
    <div class="modal notification-modal show d-block" tabindex="-1">
        <div class="modal-dialog">
            <div class="modal-content border-danger">
                <div class="modal-header bg-danger text-white">
                    <h5 class="modal-title">Hata</h5>
                    <button type="button" class="btn-close" @onclick="NotificationService.Clear"></button>
                </div>
                <div class="modal-body">
                    <p>@NotificationService.ErrorMessage</p>
                </div>
            </div>
        </div>
    </div>
}

@code {
    protected override void OnInitialized()
    {
        NotificationService.OnChange += StateHasChanged;
    }

    public void Dispose()
    {
        NotificationService.OnChange -= StateHasChanged;
    }
}
